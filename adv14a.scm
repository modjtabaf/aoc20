
(if #f
(define input (list
(cons 'mask 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X)
(cons 8 11)
(cons 7 101)
(cons 8 0)
))
(define input (list
(cons 'mask '10011X0100001X1110X0X001000X10X01101)
(cons 24654 24859)
(cons 35770 6484)
(cons 61427 2208764)
(cons 19310 16324)
(cons 14503 87701421)
(cons 'mask '001100111X101X1100XX011000X1000X1101)
(cons 21280 110690)
(cons 40788 3869809)
(cons 9568 588)
(cons 50130 1655750)
(cons 11474 4138246)
(cons 51434 1640)
(cons 'mask 'X0110011000X1X110011XX110X00000101X0)
(cons 24593 349158)
(cons 29236 292)
(cons 25761 5994)
(cons 'mask '0011001X00001101001100XX0000010X0100)
(cons 16387 2165)
(cons 8162 670)
(cons 62892 41153)
(cons 40408 23332769)
(cons 'mask '001110X100001101XX11X100X00000X00011)
(cons 13012 251733)
(cons 6786 1867)
(cons 'mask '011X1X1100X011000X0X0110111X1X1011X0)
(cons 6636 619)
(cons 37975 486807018)
(cons 49404 928)
(cons 40181 4121525)
(cons 56810 3809)
(cons 59705 1070584281)
(cons 4416 51816912)
(cons 'mask '0011X011X00011XX0011X1111000110X0101)
(cons 38794 618874)
(cons 41173 164958)
(cons 58914 75222)
(cons 8496 2061)
(cons 'mask 'X111111100101101010X111011111X110X00)
(cons 1960 366908)
(cons 52919 127350)
(cons 40181 818)
(cons 11998 119500907)
(cons 43849 10760476)
(cons 'mask '00110011101011X1000X01X01X01X00X1X0X)
(cons 25449 480)
(cons 56102 141459)
(cons 59385 81896)
(cons 63140 491613)
(cons 30262 104436)
(cons 11595 5225)
(cons 'mask '00111X1100101101000X110100X10XX00001)
(cons 15042 358518)
(cons 15617 3333112)
(cons 31013 239762)
(cons 29555 2462)
(cons 50848 293401)
(cons 21600 3851624)
(cons 40408 20785)
(cons 'mask 'X011X010X000100101X111010XX000100X1X)
(cons 55041 403675281)
(cons 59333 507377481)
(cons 20640 624655)
(cons 21439 313)
(cons 23563 219279)
(cons 6548 5897777)
(cons 'mask '00110X111000X111100X1X100XX010011100)
(cons 18578 1663877)
(cons 41092 5825)
(cons 13744 1410)
(cons 49263 3155)
(cons 8443 444960)
(cons 'mask '001X10X100001X11X00X01XX0010X0X11011)
(cons 57669 1390679)
(cons 43955 6621245)
(cons 53376 65425)
(cons 61681 274976559)
(cons 38598 38289)
(cons 63768 5498)
(cons 'mask '1011X01X1000111XX10XX10010001X100XX0)
(cons 48472 2234)
(cons 5140 240648)
(cons 16069 16831)
(cons 43264 82790417)
(cons 19100 177836159)
(cons 26727 928427)
(cons 59097 3876809)
(cons 'mask '00011001000011XX100000100X00100XX101)
(cons 4688 12964890)
(cons 20679 40681)
(cons 'mask '101X00X100XX11110XX010X11000X1100X11)
(cons 30425 21233)
(cons 37360 107897841)
(cons 20892 703947)
(cons 54341 619)
(cons 30823 247100058)
(cons 57901 1119118)
(cons 'mask '0X110101X110111X0001XX11X01X1100001X)
(cons 13897 2147)
(cons 39777 15313)
(cons 6298 314371)
(cons 17523 255520)
(cons 63099 39451)
(cons 23418 353557)
(cons 21687 97077626)
(cons 'mask '0011001110X011110X0100010XX00001X110)
(cons 44882 65801521)
(cons 45085 30203)
(cons 1084 985655)
(cons 27425 209528)
(cons 44358 11472)
(cons 'mask '00X1001110101X11000X0110X01110101X01)
(cons 64879 23507793)
(cons 64532 1008)
(cons 21566 475210)
(cons 4091 84363775)
(cons 9876 539432236)
(cons 2389 105241903)
(cons 'mask '001110110X001101X01111X10X1110010010)
(cons 47585 51489)
(cons 6612 849602)
(cons 18365 997985337)
(cons 65487 1208416)
(cons 21023 29957)
(cons 2465 826588)
(cons 'mask '00110011X000111100010000010X10X01X0X)
(cons 49438 282655)
(cons 62528 2076624)
(cons 'mask '00101XX1X10X111X0011000110X1X0001011)
(cons 17994 11940103)
(cons 16688 679)
(cons 46487 687)
(cons 64508 21169839)
(cons 28607 11034994)
(cons 14923 41424)
(cons 'mask '10110X111000X1X1010100XXX1X0X0X00000)
(cons 29236 948015620)
(cons 25431 14970969)
(cons 10143 37078)
(cons 'mask '0011XXX100X0111X000X01X0X00X00100100)
(cons 39883 54687718)
(cons 21992 704266509)
(cons 7319 90144)
(cons 56566 146246217)
(cons 24731 21810354)
(cons 7998 11075)
(cons 'mask 'X01100XX100X1011100X1000000011010000)
(cons 50848 8366)
(cons 9246 80403374)
(cons 43401 29743074)
(cons 'mask '00X10101XXX011100001X00100X011X01XX1)
(cons 13863 5215)
(cons 45085 15816956)
(cons 17031 5030397)
(cons 46099 733002)
(cons 28011 3441)
(cons 'mask '001110X110001111XXX1110X110X00X1X01X)
(cons 29186 1052)
(cons 52563 3299191)
(cons 21538 830803)
(cons 573 8358)
(cons 40408 782656)
(cons 1114 12989847)
(cons 4260 96198653)
(cons 'mask '0X11X10XXX1011110X1100110110X1110001)
(cons 22777 442)
(cons 38548 4354395)
(cons 14929 184625)
(cons 'mask '01XXX01100X01100XX01001X0X10X0001100)
(cons 47146 11883)
(cons 42514 757736)
(cons 50073 2602)
(cons 52386 11211)
(cons 'mask '00110011X0001X11XX011XX001X01X0011X0)
(cons 50198 87638)
(cons 33988 216)
(cons 28059 1590)
(cons 'mask '001100X100X011110001110000X11111XX01)
(cons 17523 9981)
(cons 29865 2998704)
(cons 42647 59347)
(cons 29555 13799)
(cons 35144 921)
(cons 'mask '001010X100001111000X10110010X00111X1)
(cons 17350 527075529)
(cons 25431 17742379)
(cons 15042 1940793)
(cons 'mask '101110X100001X101X100X01010001000110)
(cons 40789 38928)
(cons 21219 273022)
(cons 23328 215913)
(cons 162 10288)
(cons 28149 3984)
(cons 'mask '0011X01100X011X100X1X1110000XX0X01X1)
(cons 2465 267)
(cons 505 390823)
(cons 41173 5816833)
(cons 'mask 'X01X00X1000X1110X00001X0011X000X001X)
(cons 24826 1310)
(cons 7583 22009403)
(cons 5286 165130567)
(cons 7996 522391)
(cons 44869 213774)
(cons 'mask 'X011X011X0XX111100XX11001X00000X0001)
(cons 51006 6104279)
(cons 1120 244965565)
(cons 47222 4260953)
(cons 6194 183561165)
(cons 33309 30600)
(cons 'mask '0XX10X010000X11X00000001X0000X10X111)
(cons 44604 68)
(cons 3019 102473)
(cons 49892 8292400)
(cons 6578 279347)
(cons 32130 14754483)
(cons 44561 5758)
(cons 'mask '0X1111X1001X11XX01X10010111X10110X0X)
(cons 14448 249217841)
(cons 13856 31314)
(cons 47417 31057208)
(cons 10143 217)
(cons 59705 159654597)
(cons 59748 613424)
(cons 'mask 'X0X11001000X1X1XX0X0010100000100010X)
(cons 28149 1853)
(cons 7583 447873)
(cons 1187 22409951)
(cons 28815 56777)
(cons 54043 12239475)
(cons 'mask 'XX1111010X1111X10101000X1110X111X101)
(cons 12816 232975137)
(cons 59648 107539)
(cons 24219 147349)
(cons 20882 9882513)
(cons 38454 986925)
(cons 44137 876010727)
(cons 'mask '001X0X010010111XXX010100001X1100X0X1)
(cons 37358 806)
(cons 51626 70997)
(cons 29463 447303876)
(cons 'mask '0011001110X0011X10XXX0XX0100101X0100)
(cons 900 231141)
(cons 21600 25030252)
(cons 38156 15844486)
(cons 'mask '00111001X0011X11100X010001XXX11X1X11)
(cons 2111 129907)
(cons 52924 115642)
(cons 62678 120240972)
(cons 45509 12915)
(cons 'mask '101X00X10XX1111010000X000110X01000X1)
(cons 25578 50211)
(cons 20973 11594)
(cons 16122 18492467)
(cons 428 56504)
(cons 'mask 'X1111101X01X1111X0001101X001X111XX1X)
(cons 21385 3156702)
(cons 19608 340356)
(cons 28524 14376)
(cons 23508 85539)
(cons 41798 62726)
(cons 'mask 'X011001100X01110X011100100001X110010)
(cons 51442 949)
(cons 12180 8118830)
(cons 65239 82266)
(cons 'mask '1X1XX11110001X11X10100110100000X1111)
(cons 24461 15383159)
(cons 40476 990891369)
(cons 17031 756114)
(cons 25919 1146)
(cons 9623 1633931)
(cons 19939 2787566)
(cons 'mask '0011X011000011110001X10X00XX0X11XX11)
(cons 21132 207441955)
(cons 21729 2270827)
(cons 29865 255245903)
(cons 27412 100563)
(cons 28815 434209)
(cons 33145 107159933)
(cons 'mask 'X01110111000011000011010110010XXX000)
(cons 13170 12183)
(cons 11373 115178)
(cons 20677 186347729)
(cons 62975 243290935)
(cons 21292 74051231)
(cons 29695 1685)
(cons 64134 4866256)
(cons 'mask '000X0101001011X0X0X1000X0X1X01001001)
(cons 27292 26133)
(cons 47976 164870657)
(cons 39364 55068)
(cons 64805 765)
(cons 51778 362133)
(cons 23416 15745516)
(cons 46312 5124043)
(cons 'mask '00X1X0011000X111110X010101000X01100X)
(cons 37424 1276)
(cons 62892 25353)
(cons 55490 488923564)
(cons 'mask '0X11XX11X0X01101X111X00100X100111000)
(cons 38997 1162899)
(cons 51001 12227)
(cons 'mask '00X010110X0X1X1100XXX10100X110101010)
(cons 21569 597067)
(cons 18715 27)
(cons 30267 46003326)
(cons 54018 26313)
(cons 'mask '001X11100X0X1X01010X0X01X000XX000011)
(cons 58619 3025519)
(cons 49155 335)
(cons 'mask 'X0X11011X1001XX100001000X1100X010111)
(cons 59968 5462)
(cons 24784 1563235)
(cons 32242 4404632)
(cons 'mask '100111XX000X1111100X00011X10X0XX1111)
(cons 6194 15652238)
(cons 62892 3709)
(cons 34249 27959)
(cons 'mask '0010001100X1111000XX00111X1XX0100X00)
(cons 25648 20396)
(cons 35305 123915364)
(cons 48244 899896624)
(cons 2465 2809480)
(cons 18478 533412816)
(cons 'mask '001X0011101011110XX1XX010000XX100011)
(cons 12722 911)
(cons 59476 1782)
(cons 59097 34246)
(cons 'mask '0X1110X11X00X111101110X011001X100110)
(cons 35730 578)
(cons 29074 166745393)
(cons 49565 3839937)
(cons 16535 24263592)
(cons 12096 112818979)
(cons 31172 690882)
(cons 'mask '0X11101X0000X11X0XX10100000100X10110)
(cons 32700 30715982)
(cons 13474 11638)
(cons 30355 162714)
(cons 32372 374666)
(cons 8861 4177)
(cons 14725 18706500)
(cons 'mask '1XX10011100X11110X0X1X010X000X100011)
(cons 12660 2511)
(cons 14390 54920)
(cons 42573 602)
(cons 5366 8043)
(cons 37121 15182)
(cons 50266 47404289)
(cons 6211 6160701)
(cons 'mask 'X01110111X0011110001X001010010011XX0)
(cons 62074 27709)
(cons 19572 215073)
(cons 30262 103061)
(cons 41948 474576)
(cons 10 20234251)
(cons 53648 186)
(cons 'mask '01111X0100111110XX11X0001110001101X0)
(cons 35353 7266230)
(cons 58097 413210062)
(cons 2038 19381939)
(cons 'mask '00110011001XX1110011X1XX100000110001)
(cons 38289 45585543)
(cons 44220 107125986)
(cons 36866 157)
(cons 306 22305)
(cons 'mask 'X011X0111X001111000XX00X0000X0X11100)
(cons 1154 26709)
(cons 29555 100037)
(cons 51840 333919)
(cons 'mask 'XX1010110000X0XX10000X01XX00X1110011)
(cons 62285 633)
(cons 27840 64)
(cons 5837 8021)
(cons 20487 191)
(cons 24654 6019669)
(cons 'mask '0011X0110000X11100X11110X000000011X1)
(cons 44094 5648333)
(cons 55022 7432)
(cons 2465 194078974)
(cons 2111 349813100)
(cons 'mask '00111001000X1X1110X10100000X10101001)
(cons 15930 2650370)
(cons 63070 1849)
(cons 'mask 'X00XX10110001X100001110100001X001111)
(cons 21280 104608)
(cons 4718 121593)
(cons 30161 48408)
(cons 48793 965)
(cons 14676 709)
(cons 46815 1754519)
(cons 31946 2023)
(cons 'mask '001000010001111010X000XXX11110X10000)
(cons 47079 14543)
(cons 32014 2815)
(cons 18348 28459)
(cons 'mask '00XX1X1000X0110101XX1101100X00000010)
(cons 33337 71580)
(cons 32899 82536)
(cons 13170 118436504)
(cons 'mask '1010X011000111X0000X010111X000101110)
(cons 4880 595483)
(cons 10755 31627392)
(cons 23773 407)
(cons 22920 73207841)
(cons 57126 295)
(cons 51840 2209)
(cons 23481 474075)
(cons 'mask '101XX00X00X011X0000000X0111000X11100)
(cons 64624 14953)
(cons 19608 54894733)
(cons 29986 15071049)
(cons 'mask '0011101X00X01X0101X11001X0XX10X00011)
(cons 17057 844)
(cons 30403 1748774)
(cons 52758 18751200)
(cons 37259 98113)
(cons 'mask '00111011001X1101XX0101100001000001X1)
(cons 21292 16311415)
(cons 65487 2949)
(cons 36322 1865682)
(cons 30926 200230)
(cons 60087 15039)
(cons 6500 7510496)
(cons 'mask '0011X011XX0XX11X10X0X101001100110X01)
(cons 16550 10590361)
(cons 31654 841815658)
(cons 48434 88501912)
(cons 21639 2974)
(cons 35602 1683)
(cons 'mask '101000110000X1100000001X00XX10100110)
(cons 22048 1415)
(cons 14090 3862148)
(cons 'mask '01101111101011100X010X0110X10010X010)
(cons 48244 11376)
(cons 17616 23389)
(cons 42300 242814049)
(cons 13258 114)
(cons 28607 8192328)
(cons 39388 206758277)
(cons 'mask '011X1111XX1011X0010X0110110X1X11010X)
(cons 27249 935)
(cons 40659 8054)
(cons 1114 107459)
(cons 16122 21258)
(cons 61068 3905)
(cons 29102 1402)
(cons 'mask '00111011000X101100001100X0000111X0X0)
(cons 7168 52085505)
(cons 15056 10662)
(cons 21503 1537)
(cons 52065 2073412)
(cons 44846 10151217)
(cons 11004 19190166)
(cons 16387 160465)
(cons 'mask '0011X01100X011X10001010000000X100X10)
(cons 12528 255519)
(cons 16693 102982656)
(cons 24320 1990)
(cons 47044 6975780)
(cons 'mask '0010100X0000X11100X110010XX0001XX011)
(cons 20587 6571)
(cons 64147 7110)
(cons 42647 2597)
(cons 'mask '101100100X0X10010X01XX01X001X0101110)
(cons 50749 462381)
(cons 30825 243988904)
(cons 33942 2849)
(cons 21729 10732)
(cons 3791 1768)
(cons 23199 56602420)
(cons 'mask 'X011X011X000X11X0X0100011000XX110100)
(cons 60923 61410)
(cons 50073 434162)
(cons 26727 197)
(cons 34717 2271)
(cons 32388 731353)
(cons 'mask '00111X11X0X01011X00110X10X1X0X011010)
(cons 18010 243304)
(cons 53275 1809698)
(cons 59968 75652)
(cons 37491 58703)
(cons 'mask '0XX111010010111X000001X1X01X1X101X1X)
(cons 12430 423118)
(cons 63768 494)
(cons 32845 44373945)
(cons 54999 1789)
(cons 32380 598351)
(cons 53355 778861)
(cons 'mask '00101001000010110X00110X10X11XX11001)
(cons 14448 2390)
(cons 13825 11613432)
(cons 64002 84968)
(cons 'mask '0X1100110010X1X1000111101X010010XX00)
(cons 64805 164341)
(cons 1400 4905371)
(cons 33145 514)
(cons 9454 9357)
(cons 20661 393146)
(cons 'mask '10111011X10011X100000110X01X00010011)
(cons 29803 839150)
(cons 57692 471594)
(cons 32700 44750)
(cons 21423 3495394)
(cons 10143 1515)
(cons 52421 146692)
(cons 40270 1331813)
(cons 'mask 'X01000010011111010000100X010X11X100X)
(cons 7407 193534335)
(cons 38681 393404094)
(cons 32281 14475124)
(cons 7640 52312481)
(cons 'mask '0X000X0110001X1000010100X00000001011)
(cons 61634 21561366)
(cons 4091 96113157)
(cons 13595 2547708)
(cons 48798 2078)
(cons 'mask '0XX110110000111100X01100000010X1011X)
(cons 55022 127497)
(cons 46666 61231366)
(cons 61634 1255)
(cons 'mask '00X01XX1110111100X110101X10X11000001)
(cons 9150 255662)
(cons 17994 683)
(cons 2187 103300343)
(cons 'mask '00X100X100101X1X0X011X10100111X00010)
(cons 8484 11065764)
(cons 15042 1374328)
(cons 16160 115092)
(cons 'mask '101110X0X0X01001010101010010001X0111)
(cons 35342 8097167)
(cons 48472 102130579)
(cons 49427 1522845)
(cons 'mask 'X0111X1110000110000110X11X0101110100)
(cons 35353 49102)
(cons 34926 235087)
(cons 8496 23550)
(cons 1861 14976346)
(cons 1655 1500812)
(cons 'mask '00110011XX101X110001011100X1X0X00000)
(cons 24717 1173968)
(cons 776 5571497)
(cons 51370 6391302)
(cons 59004 95795)
(cons 6211 265715670)
(cons 'mask '00111X11001011010X1110X10X010X0X0XX1)
(cons 51066 8216)
(cons 59684 126789182)
(cons 15617 69873)
(cons 40044 171235086)
(cons 12546 14388049)
(cons 40942 100102186)
(cons 'mask '00X11101001XX11001010X01111X0001X000)
(cons 64134 3173838)
(cons 9441 613461)
(cons 29250 3735755)
(cons 'mask '100X1X01X0001111100X00011X0010110111)
(cons 702 106830)
(cons 306 17331)
(cons 53814 515346)
))
)

(define mem '())
(define mask0 0)
(define mask1 0)

; is there a binary or operator?
(define (bin-or A B) (let
  (
    (C 0)
    (n 1)
  )
  (set! A (reverse (string->list (format #f "~36b" A))))
  (set! B (reverse (string->list (format #f "~36b" B))))
  (for-each
    (lambda (ab) (let
      (
        (a (car ab))
        (b (cadr ab))
      )
      
      (if (or (eqv? a #\1) (eqv? b #\1))
        (set! C (+ C n))
      )
      (set! n (* n 2))
    ))
    (zip A B)
  )
  
  C
))

; is there a binary and operator?
(define (bin-and A B) (let
  (
    (C 0)
    (n 1)
  )
  (set! A (reverse (string->list (format #f "~36b" A))))
  (set! B (reverse (string->list (format #f "~36b" B))))
  (for-each
    (lambda (ab) (let
      (
        (a (car ab))
        (b (cadr ab))
      )
      
      (if (and (eqv? a #\1) (eqv? b #\1))
        (set! C (+ C n))
      )
      (set! n (* n 2))
    ))
    (zip A B)
  )
  
  C
))

(for-each
  (lambda (inst) (let
    (
      (addr (car inst))
      (val (cdr inst))
    )
    
    (if (symbol? addr) (let
      ; then
      ((n 1))
      (set! mask0 0)
      (set! mask1 0)
      (for-each
        (lambda (b)
          (cond
            ((eqv? b #\0)
              ; nothing to do
            )
            ((eqv? b #\1)
              (set! mask0 (+ mask0 n))
              (set! mask1 (+ mask1 n))
            )
            ((eqv? b #\x)
              (set! mask0 (+ mask0 n))
            )
          )
          (set! n (* n 2))
        )
        (reverse (string->list (symbol->string val)))
      )
    ) (let
      ; else
      ((m (assoc addr mem)))
      (if (not (pair? m)) (begin
        (set! m (cons addr 0))
        (set! mem (cons m mem))
      ))
      (set! val (bin-or  val mask1))
      (set! val (bin-and val mask0))
      ;(pp (list mask0 mask1 val))
      (set-cdr! m val)
    ))
  ))
  input
)

(define total 0)
(for-each
  (lambda (m)
    (set! total (+ total (cdr m)))
  )
  mem
)

(pp total)
